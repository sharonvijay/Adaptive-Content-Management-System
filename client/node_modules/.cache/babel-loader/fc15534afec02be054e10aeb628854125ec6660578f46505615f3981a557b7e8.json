{"ast":null,"code":"import * as api from '../api';\n\n// Action Creators\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log('bitch');\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","createPost","post","message"],"sources":["D:/DBMS-PROJECT/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators\r\n\r\nexport const getPosts = ()=> async(dispatch) =>{\r\n    try{\r\n        const {data} = await api.fetchPosts();\r\n        dispatch({type:'FETCH_ALL',payload:data});\r\n\r\n    }\r\n    catch(error){\r\n        console.log('bitch');\r\n\r\n    }\r\n}\r\n\r\nexport const createPost = (post)=> async(dispatch)=>{\r\n    try{\r\n        const {data} = await api.createPost(post);\r\n        dispatch({type:'FETCH_ALL',payload:data});\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error.message);\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;;AAE7B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAK,MAAMC,QAAQ,IAAI;EAC3C,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,EAAE;IACrCF,QAAQ,CAAC;MAACG,IAAI,EAAC,WAAW;MAACC,OAAO,EAACH;IAAI,CAAC,CAAC;EAE7C,CAAC,CACD,OAAMI,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAExB;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAI,MAAMT,QAAQ,IAAG;EAChD,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACU,UAAU,CAACC,IAAI,CAAC;IACzCT,QAAQ,CAAC;MAACG,IAAI,EAAC,WAAW;MAACC,OAAO,EAACH;IAAI,CAAC,CAAC;EAE7C,CAAC,CACD,OAAMI,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACK,OAAO,CAAC;EAC9B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}